<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<bean id="favorite" name="favoriteFood" class="com.test03.Food">
		<property name="name" value="고기"/>
		<property name="price" value="50000"/>
	</bean>


	<bean id="unFavorite" name="unFavoriteFood" class="com.test03.Food">
		<constructor-arg value="굴"></constructor-arg>
		<constructor-arg value="50"></constructor-arg>
	</bean>
<!-- 	
	<bean id="myFood" class="com.test03.MyFoodMgr">
		<property name="favoriteFood" ref="favorite"></property>
		<property name="unFavoriteFood" ref="unFavorite"></property>
	</bean>
 -->
 
 	<bean id="myFood" class="com.test03.MyFoodMgr" autowire="byType"></bean>	
</beans>


<!-- 
autowire 속성값
1.byName :
	id/name으로 setter 자동 호출
	(name=favoriteFood -> setFavoriteFood)
	setter와 같은 이름의 bean이 있으면 자동할당

2.byType :
	setter의 parameter type과 같은 type의 bean이 있으면 자동 할당
	setFavoriteFood(Food favoriteFood) -> Food type의 bean 자동할당

3.constructor:
	생성자의 parameter와 같은 type의 bean 자동 할당
	
4.default(aotodetect) :
	생성자에 할당할 type이 있는지 먼저 확인 후, (constructor)
	없으면 메서드에서 type이 있는 지 확인하여 할당 (byType)
	*기본 생성자가 있으면 기본 생성자 호출
	
	@autowired라는 어노테이션으로 많이 쓰인다.
 -->